import unittest
from selenium import webdriver
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
import page

class PythonOrgSearch(unittest.TestCase):

    def setUp(self):
        self.options = webdriver.ChromeOptions()
        self.options.add_argument('--ignore-certificate-errors')
        self.options.add_argument('--allow-running-insecure-content')
        self.options.add_experimental_option('detach', True)
        self.driver = webdriver.Chrome(options=self.options)
        self.url = "https://gbox-platform.vercel.app"

    def test_sign_in_success(self):
        self.driver.get(f"{self.url}/sign-in")
        mainPage = page.MainPage(self.driver)
        assert mainPage.is_title_matches()
        # nhap username va password
        mainPage.search_username_element = "tronglinh230203@gmail.com"
        mainPage.search_password_element = "Linh123456@"
        mainPage.submit()
        WebDriverWait(mainPage.driver, 10).until(EC.url_to_be(f"{self.url}/"))
        result = page.resultsAfter(self.driver)
        assert result.is_login() == True
        print("Login success!")
        
    def test_sign_in_fail(self):
        self.driver.get(f"{self.url}/sign-in")
        mainPage = page.MainPage(self.driver)
        assert mainPage.is_title_matches()
        # nhap username va password
        mainPage.search_username_element = "tronglinh230203@gmail.com"
        mainPage.search_password_element = "Linh123456@1"
        mainPage.submit()
        WebDriverWait(mainPage.driver, 10).until(EC.url_to_be(f"{self.url}/sign-in"))
        result = page.resultsAfter(self.driver)
        assert result.is_login() == False
        print("Login Fail!")

    # def test_sign_up_success(self):
    
    # def test_sign_up_fail(self):
        
    # def test_forgot_password_success(self):
    
    # def test_forgot_password_fail(self):

    # def tearDown(self):
    #     self.driver.close()

if __name__ == "__main__":
    unittest.main()

